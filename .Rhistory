y.l <- 1/lambda*log((y^lambda)/(1-y^lambda))
return(y.l)}
## profile likelihood for lambda
lp.lambda1 <- function(lambda,y){
mod <- lm(trans1(lambda,y)~sin(data$wd30)+cos(data$wd30)+sin(I(data$wd30^2))+cos(I(data$wd30^2)))
length(y)/2*log(summary(mod)$sigma^2) - sum(log(abs(1/(y*(1 - y^lambda)))))
}
#plot(seq(0.01,1,0.01), sapply(seq(0.01,1,0.01), lp.lambda1, y=data$pow.obs.norm))
lp.lambda1(1/1, data$pow.obs.norm)
(opt.lambda.trans1=optimize(lp.lambda1,c(0,1),y=data$pow.obs.norm))
mod5=glm(trans1(opt.lambda.trans1$minimum,data$pow.obs.norm)~ sin(data$wd30)+cos(data$wd30)+sin(I(data$wd30^2))+cos(I(data$wd30^2)),family=gaussian,  data=data)
summary(mod4)
AIC(mod4)
mod4=glm(trans1(opt.lambda.trans1$minimum,data$pow.obs.norm)~ ws30+I(data$ws30^2)+I(data$ws30^3),family=gaussian,  data=data)
summary(mod4)
AIC(mod4)
qqnorm(mod4$residuals)
qqline(mod4$residuals)
mod5=glm(trans1(opt.lambda.trans1$minimum,data$pow.obs.norm)~ sin(data$wd30)+cos(data$wd30)+sin(I(data$wd30^2))+cos(I(data$wd30^2)),family=gaussian,  data=data)
summary(mod5)
AIC(mod5)
qqnorm(mod5$residuals)
qqline(mod5$residuals)
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
m0 = glm(AIDS ~ 1, family = binomial)
pi = m0$fit
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Creating design matrix
X <- matrix(0, nrow = length(y), ncol = 2)
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Creating design matrix
X <- matrix(0, nrow = length(AIDS), ncol = 2)
X[,1] = 1
X[,2] = c(rep(1,data$AIDS_yes[1]), rep(0,data$AIDS_yes[2]), rep(1,data$AIDS_no[1]),rep(1,data$AIDS_no[2]))
View(X)
View(X)
m0 = glm(AIDS ~ 1, family = binomial)
# See def. for pi on p. 259
pi = m0$fit
#Weights for the score and information function
WS <- (y-pi)
m0 = glm(AIDS ~ 1, family = binomial)
# See def. for pi on p. 259
pi = m0$fit
#Weights for the score and information function
WS <- (AIDS-pi)
WI <- pi*(1-pi)
#t is the transpose
XWS = t(X) %*% WS
XWI = X * WI
XMX = t(XWI) %*% X
m0 = glm(AIDS ~ 1, family = binomial)
# See def. for pi on p. 259
pi = m0$fit
#Weights for the score and information function
WS <- (AIDS-pi)
WI <- pi*(1-pi)
#t is the transpose
XWS = t(X) %*% WS
XWI = X * WI
XMX = t(XWI) %*% X
#The score statistics (HVAD ER DET DER SKER HER?!?)
t(XWS) %*% solve(XWX) %*% XWS
m0 = glm(AIDS ~ 1, family = binomial)
# See def. for pi on p. 259
pi = m0$fit
#Weights for the score and information function
WS <- (AIDS-pi)
WI <- pi*(1-pi)
#t is the transpose
XWS = t(X) %*% WS
XWI = X * WI
XWX = t(XWI) %*% X
#The score statistics (HVAD ER DET DER SKER HER?!?)
t(XWS) %*% solve(XWX) %*% XWS
1-pchisq(t(XWS) %*% solve(XWX) %*% XWS, df=1)
m0 = glm(AIDS ~ 1, family = binomial)
# See def. for pi on p. 259
pi = m0$fit
#Weights for the score and information function
WS <- (AIDS-pi)
WI <- pi*(1-pi)
#t is the transpose
XWS = t(X) %*% WS
XWI = X * WI
XWX = t(XWI) %*% X
#The score statistics (HVAD ER DET DER SKER HER?!?)
t(XWS) %*% solve(XWX) %*% XWS
print('p-value:')
1-pchisq(t(XWS) %*% solve(XWX) %*% XWS, df=1)
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
by(data.time$event, data.time$tx, sum)
#From days to years
data.time$YearTime <- data.time$time/365.25
by(data.time$YearTime, data.time$tx, sum)
library(survival)
Surv.Bytx <- survfit(Surv(time, event == 1) ~ tx,
conf.type = "log-log",data = data.time)
(Surv.Bytx)
plot(Surv.Bytx, conf.int = T, las = 1, xlab = "Time",ylab = "Estimated Survival Prob.", col=c(2,3), lwd = 1)
legend("bottomleft", col=2:3, c("Not treated","Treated"), lwd=2)
plot(Surv.Bytx, fun=function(x) { 1- x }, conf.int = T,las = 1, xlab = "Time",
ylab = "Estimated Failure Prob.", col=c(2,3))
legend("topleft", col=c(2,3), c("Male","Female"))
survdiff(Surv(YearTime, event == 1) ~ tx, data = data.time)
mod1 <- survreg(Surv(time, event) ~ tx + cd4,
data = data.time, dist = "weibull")
summary(mod1)
mod3 <- survreg(Surv(time, event) ~ cd4 + tx,
data = data.time, dist = "loglogistic")
summary(mod3)
c(AIC(mod1),AIC(mod3))
confint(mod3)
#Time ratio for bearings
exp(cbind(coef(mod3)[3],confint(mod3)[3, 1], confint(mod3)[3, 2]))
#Time ratio for loads
exp(cbind(coef(mod3)[2],confint(mod3)[2, 1], confint(mod3)[2, 2])*50)
data.time$z <- (log(data.time$time)-mod3$linear.predictors)/mod3$scale
data.time$CS3 <- log(1+exp(data.time$z))
surv3 <- survfit(Surv(CS3, event==1)~1 , data = data.time)
plot(surv3$time, -log(surv3$surv))
abline(a=0, b=1, lty=2)
xrange <- range(data.time$time)
t <- seq(xrange[1],xrange[2],length=100)
#LOG LOGISTIC
coef3 <- mod3$coefficients
z31 <- (log(t)-(coef3[1]+coef3[2]+coef3[3]))/mod3$scale
z30 <- (log(t)-(coef3[1]+coef3[2]))/mod3$scale
S31 <- (1+exp(z31))^-1
S30 <- (1+exp(z30))^-1
# get the range for the x and y axis
xrange <- range(data.time$time)
yrange <- range(S30)
# set up the plot
plot(xrange, yrange, type="n", xlab="Hours since test start",
ylab="Probability of survival (cd4=1)",las=1)
#PLOT THE SURVIVAL FUNCTIONS
lines(t, S31, type="l", col=2, lty=1, lwd=2)
lines(t, S30, type="l", col=3, lty=1, lwd=2)
legend('topright',lwd=2,col=c(2,3),legend=c('LL with tx', 'LL without tx'))
print(XWI)
XWI
data <- read.delim("Logistic.txt",header = TRUE, sep = "", dec = ".")
data$AIDS_no=data$n-data$AIDS_yes
head(data,2)
n <- sum(data[,3]) #Number of patient #n
k <- sum(data[,2]) #Number of patients with AIDS #Sucesses #k
theta <- k/n #Probability that you have Aids
AZT = c(rep(1,170),rep(0,168))
AIDS = c(rep(1,25),rep(0,145),rep(1,44),rep(0,124))
#Creating a dataframe with data
df = data.frame(AZT,AIDS)
#Creating design matrix
X <- matrix(0, nrow = length(AIDS), ncol = 2)
X[,1] = 1
X[,2] = c(rep(1,data$AIDS_yes[1]), rep(0,data$AIDS_yes[2]), rep(1,data$AIDS_no[1]),rep(1,data$AIDS_no[2]))
#Logistic regression
mod1=glm(AIDS~AZT, family = binomial,data = df)
summary(mod1)
a = data$AIDS_yes[1]
b = data$AIDS_no[1]
c = data$AIDS_yes[2]
d = data$AIDS_no[2]
(OR=(a*d)/(b*c))
#with confidence interval #95% confidence interval
(lowerOR=exp(log(OR)-qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
(upperOR=exp(log(OR)+qnorm(0.975)*sqrt(1/a+1/b+1/c+1/d)))
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
confint(mod1)
z=coef(mod1)[2]/summary(mod1)$coefficients[2,2]
2*pnorm(z)
1-pchisq(z^2, df=1)
m0 = glm(AIDS ~ 1, family = binomial)
# See def. for pi on p. 259
pi = m0$fit
#Weights for the score and information function
WS <- (AIDS-pi)
WI <- pi*(1-pi)
#t is the transpose
XWS = t(X) %*% WS
XWI = X * WI
XWX = t(XWI) %*% X
#The score statistics (HVAD ER DET DER SKER HER?!?)
t(XWS) %*% solve(XWX) %*% XWS
print('p-value:')
1-pchisq(t(XWS) %*% solve(XWX) %*% XWS, df=1)
#Load data
data.time <- read.delim("actg320.txt",header = TRUE, sep = "", dec = ".")
head(data.time,2)
by(data.time$event, data.time$tx, sum)
#From days to years
data.time$YearTime <- data.time$time/365.25
by(data.time$YearTime, data.time$tx, sum)
library(survival)
Surv.Bytx <- survfit(Surv(time, event == 1) ~ tx,
conf.type = "log-log",data = data.time)
(Surv.Bytx)
plot(Surv.Bytx, conf.int = T, las = 1, xlab = "Time",ylab = "Estimated Survival Prob.", col=c(2,3), lwd = 1)
legend("bottomleft", col=2:3, c("Not treated","Treated"), lwd=2)
plot(Surv.Bytx, fun=function(x) { 1- x }, conf.int = T,las = 1, xlab = "Time",
ylab = "Estimated Failure Prob.", col=c(2,3))
legend("topleft", col=c(2,3), c("Male","Female"))
survdiff(Surv(YearTime, event == 1) ~ tx, data = data.time)
mod1 <- survreg(Surv(time, event) ~ tx + cd4,
data = data.time, dist = "weibull")
summary(mod1)
mod3 <- survreg(Surv(time, event) ~ cd4 + tx,
data = data.time, dist = "loglogistic")
summary(mod3)
c(AIC(mod1),AIC(mod3))
confint(mod3)
#Time ratio for bearings
exp(cbind(coef(mod3)[3],confint(mod3)[3, 1], confint(mod3)[3, 2]))
#Time ratio for loads
exp(cbind(coef(mod3)[2],confint(mod3)[2, 1], confint(mod3)[2, 2])*50)
data.time$z <- (log(data.time$time)-mod3$linear.predictors)/mod3$scale
data.time$CS3 <- log(1+exp(data.time$z))
surv3 <- survfit(Surv(CS3, event==1)~1 , data = data.time)
plot(surv3$time, -log(surv3$surv))
abline(a=0, b=1, lty=2)
xrange <- range(data.time$time)
t <- seq(xrange[1],xrange[2],length=100)
#LOG LOGISTIC
coef3 <- mod3$coefficients
z31 <- (log(t)-(coef3[1]+coef3[2]+coef3[3]))/mod3$scale
z30 <- (log(t)-(coef3[1]+coef3[2]))/mod3$scale
S31 <- (1+exp(z31))^-1
S30 <- (1+exp(z30))^-1
# get the range for the x and y axis
xrange <- range(data.time$time)
yrange <- range(S30)
# set up the plot
plot(xrange, yrange, type="n", xlab="Hours since test start",
ylab="Probability of survival (cd4=1)",las=1)
#PLOT THE SURVIVAL FUNCTIONS
lines(t, S31, type="l", col=2, lty=1, lwd=2)
lines(t, S30, type="l", col=3, lty=1, lwd=2)
legend('topright',lwd=2,col=c(2,3),legend=c('LL with tx', 'LL without tx'))
XWI
XWS
m0
WS
pu
pi
XWI
XWX
solve(XMX)
solve(XWX)
solve(XWX) %*% XWS
(c)
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
1-pchisq(c, df=1)
#mod1 = glm(AIDS~AZT, family = binomial,data = df)
c = mod1$null.deviance-mod1$deviance
(1-pchisq(c, df=1))
data <- read.csv("data.csv", header = TRUE)
data <- read.csv("data.csv", header = TRUE)
head(data,7)
summary(data)
boxplot(data$X35)
boxplot(data$X35,ylab = "Age")
library(cars)
library(car)
qqPlot(data$X35)
library(car)
boxplot(data$X35, ylab = "Age")
qqPlot(data$X35)
library("ggplot2")                     # Load ggplot2 package
library("GGally")
ggpairs(data[c(0,4:6)])
data <- read.delim("tuno.txt",header = TRUE, sep = " ", dec = ".")
library("ggplot2")                     # Load ggplot2 package
library("GGally")
ggpairs(data[c(0,4:6)])
library("ggplot2")                     # Load ggplot2 package
library("GGally")
ggpairs(data[c(0,1:6)])
ggpairs(data[c(1,1:6)])
library("ggplot2")                     # Load ggplot2 package
library("GGally")
ggpairs(data)
library("ggplot2")                     # Load ggplot2 package
library("GGally")
ggpairs(data[c(,1:6)])
library("ggplot2")                     # Load ggplot2 package
library("GGally")
ggpairs(data[c(:,1:6)])
library("ggplot2")                     # Load ggplot2 package
library("GGally")
ggpairs(data[c(0,1:6)])
data <- read.csv("data.csv", header = TRUE)
head(data,7)
summary(data)
library(car)
boxplot(data$X35, ylab = "Age")
qqPlot(data$X35)
library("ggplot2")                     # Load ggplot2 package
library("GGally")
ggpairs(data[c(0,1:6)])
library("ggplot2")
library("GGally")
ggpairs(data)
library(car)
boxplot(data$X35, ylab = "Age")
qqPlot(data$X35)
hist(data$X35)
hist(data$X35, main = "Histogram of Age")
library(car)
boxplot(data$X35, ylab = "Age")
qqPlot(data$X35)
hist(data$X35,xlab = "Age" main = "Histogram of Age")
library(car)
boxplot(data$X35, ylab = "Age")
qqPlot(data$X35)
hist(data$X35,xlab = "Age", main = "Histogram of Age")
library(car)
boxplot(data$X35, ylab = "Age")
qqPlot(data$X35)
hist(data$X35, xlab = "Age", main = "Histogram of Age")
data <- read.csv("data3.csv", header = TRUE)
head(data,7)
summary(data)
library(car)
boxplot(data$X35, ylab = "Age")
library(car)
boxplot(data$AGE, ylab = "Age")
qqPlot(data$AGE)
hist(data$AGE, xlab = "Age", main = "Histogram of Age")
library(car)
boxplot(data$Test, ylab = "Age")
qqPlot(data$Test)
hist(data$Test, xlab = "Age", main = "Histogram of Age")
library(car)
boxplot(data$Test[data$TEST==0], ylab = "Post-test")
qqPlot(data$Test)
hist(data$Test, xlab = "Post-test", main = "Histogram of post-test")
library(car)
(data$Test[data$TEST==0])
boxplot(data$Test[data$TEST==0], ylab = "Post-test")
qqPlot(data$Test[data$TEST==0])
hist(data$Test[data$TEST==0], xlab = "Post-test", main = "Histogram of post-test")
library(car)
length(data$Test[data$TEST==0])
boxplot(data$Test[data$TEST==0], ylab = "Post-test")
qqPlot(data$Test[data$TEST==0])
hist(data$Test[data$TEST==0], xlab = "Post-test", main = "Histogram of post-test")
library(car)
length(data$Test[data$TEST==0])
length(data$Test[data$TEST==1])
length(data$Test[data$TEST==2])
boxplot(data$Test[data$TEST==0], ylab = "Post-test")
qqPlot(data$Test[data$TEST==0])
hist(data$Test[data$TEST==0], xlab = "Post-test", main = "Histogram of post-test")
library(car)
length(data$Test[data$TEST==0])
length(data$Test[data$TEST==1])
length(data$Test[data$TEST==2])
boxplot(data$Test[data$TEST==0], ylab = "Post-test")
qqPlot(data$Test[data$TEST==1])
hist(data$Test[data$TEST==0], xlab = "Post-test", main = "Histogram of post-test")
library(car)
length(data$Test[data$TEST==0])
length(data$Test[data$TEST==1])
length(data$Test[data$TEST==2])
boxplot(data$Test[data$TEST==0], ylab = "Post-test")
qqPlot(data$Test[data$TEST==2])
hist(data$Test[data$TEST==0], xlab = "Post-test", main = "Histogram of post-test")
data <- read.csv("data3.csv", header = TRUE)
head(data,7)
summary(data)
library(car)
length(data$Test[data$TEST==0])
length(data$Test[data$TEST==1])
length(data$Test[data$TEST==2])
boxplot(data$Test[data$TEST==0], ylab = "Post-test")
qqPlot(data$Test[data$TEST==2])
hist(data$Test[data$TEST==0], xlab = "Post-test", main = "Histogram of post-test")
library("ggplot2")
library("GGally")
ggpairs(data)
library(car)
length(data$Test[data$TEST==0])
length(data$Test[data$TEST==1])
length(data$Test[data$TEST==2])
boxplot(data$Test[data$TEST==0], ylab = "Post-test")
qqPlot(data$Test[data$TEST==0])
hist(data$Test[data$TEST==0], xlab = "Post-test", main = "Histogram of post-test")
library(car)
length(data$Test[data$TEST==0])
length(data$Test[data$TEST==1])
length(data$Test[data$TEST==2])
boxplot(data$Test[data$TEST==0], ylab = "Post-test")
qqPlot(data$Test[data$TEST==1])
hist(data$Test[data$TEST==0], xlab = "Post-test", main = "Histogram of post-test")
library(car)
length(data$Test[data$TEST==0])
length(data$Test[data$TEST==1])
length(data$Test[data$TEST==2])
boxplot(data$Test[data$TEST==0], ylab = "Post-test")
qqPlot(data$Test[data$TEST==2])
hist(data$Test[data$TEST==0], xlab = "Post-test", main = "Histogram of post-test")
N170.data <- N170.data[complete.cases(N170.data), ]
setwd("~/GitHub/EEG---Special-course")
EPN.data <- EPN.data[complete.cases(EPN.data), ]
setwd("~/GitHub/EEG---Special-course")
source('~/GitHub/EEG---Special-course/RMFAnova.R', echo=TRUE)
pitch=c(233,204,242,130,112,142
sex=c(rep("female",3),rep("male",3))
pitch=c(233,204,242,130,112,142)
sex=c(rep("female",3),rep("male",3))
pitch=c(233,204,242,130,112,142)
sex=c(rep("female",3),rep("male",3))
my.df=data.frame(sex,pitch)
View(my.df)
View(my.df)
xmdl=lm(pitch~sex,my.df)
xmdl=lm(pitch~sex,my.df)
summary(xmdl)
